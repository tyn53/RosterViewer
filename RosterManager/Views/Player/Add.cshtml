@model Gmi.RosterManager.Models.PlayerModel

@{
    ViewBag.Title = "Add New Player";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="padding-top:20px">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">Add New Player</h4>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("Create", "Player", FormMethod.Post, new { encType = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.PlayerID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.ScreenName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ScreenName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ScreenName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Team", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.TeamID, (IEnumerable<SelectListItem>)ViewData["Teams"], new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TeamID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Upload Avatar Image", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.AvatarImageFile, new { type = "file", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AvatarImageFile, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
