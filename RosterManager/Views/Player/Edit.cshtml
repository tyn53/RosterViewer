@model Gmi.RosterManager.Models.PlayerModel

@{
    ViewBag.Title = "Edit Player";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div style="padding-top:20px">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">Edit Player</h4>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("Update", "Player", FormMethod.Post, new { encType = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.PlayerId)

                        <div class="form-group">
                            @Html.Label("Screen Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ScreenName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ScreenName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Team", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.TeamId, (IEnumerable<SelectListItem>)ViewData["Teams"], new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TeamId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Upload Avatar Image", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.AvatarImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AvatarImageFile, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                                
                            </div>
                        </div>
                    </div>
                </div>
            }
            <button class="btn btn-default text-center pull-right" title="Cancel" onclick="@("window.location.href='" + Url.Action("Details", "Player", new { id = Model.PlayerId }, null) + "'");"> Cancel </button>
        </div>
    </div>
</div>
